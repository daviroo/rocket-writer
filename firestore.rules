rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Make sure the uid of the requesting user matches name of the user
    // document. The wildcard expression {userId} makes the userId variable
    // available in rules.
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }
    match /accounts/{account} {
      allow read: if get(/databases/$(database)/documents/accounts/$(account)).data.users[request.auth.uid] != null;
    }
    match /accounts/{account}/documents/{document} {
      allow read, delete: if get(/databases/$(database)/documents/accounts/$(account)).data.users[request.auth.uid].role == 'admin';
      allow update, create:  if get(/databases/$(database)/documents/accounts/$(account)).data.users[request.auth.uid].role == 'admin'
      && request.resource.data.title != null
      && request.resource.data.title != ""
    }
    match /accounts/{account}/documentWarnings/{document} {
      allow read: if get(/databases/$(database)/documents/accounts/$(account)).data.users[request.auth.uid].role == 'admin';
    }
    match /accounts/{account}/documentList/{documentId} {
      allow read, update, delete, create: if get(/databases/$(database)/documents/accounts/$(account)).data.users[request.auth.uid] != 'null' 
    }
  }
}